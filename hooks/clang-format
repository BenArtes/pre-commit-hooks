#!/usr/bin/env bash
# Wrapper script for clang-format
################################################################################
CMD="clang-format"
args=("$@")
hook_dir="$(dirname "$(readlink -f "$0")")"
. "$hook_dir/utils"


# Get the file argument if one exists. Assert version as necessary.
function parse_args {
	for arg in "${args[@]}"; do
		if [[ "$arg" == "--version="* ]]; then
			actual="$(clang-format --version | awk '{print $3}')"
			expected="$(echo "$arg" | cut -d '=' -f 2)"
			assert_version "$actual" "$expected"
		elif [ -e "$arg" ]; then
			filename="$arg"
		fi
	done

	if [ -z "$filename" ]; then
		echo "ERR: No file arg found. args =" "${args[@]}"
		exit 1
	fi
}


# If there are differences, this script will fail (and pre-commit should show this)
function diff_formatted {
	if [[ " ${args[*]} " == *" -i "* ]]; then
		# Here, diff compares what the file is before and after transform
		diff "$filename" <(clang-format "${args[@]}"; cat "$filename")
	else
		# Otherwise clang-format should send output to stdout, and can be compared
		diff "$filename" <(clang-format "${args[@]}")
	fi
}


function clangformat_main {
	check_installed "$CMD"
	parse_args
	diff_formatted
}

clangformat_main
