#!/usr/bin/env bash
# Wrapper script for oclint
CMD="oclint"
if [ -z "$(command -v $CMD)" ]; then
	echo -e "ERR: $CMD not found.\nMake sure to install $CMD and add it to your path."
	echo -e "For more info: https://github.com/pocc/pre-commit-hooks#prerequisites"
	exit 1
fi

pwd_files="$(ls)"
# Split text into an array of args that can be passed into oclint
output="$(oclint "$@" 2>/dev/null)"
# Remove any plist files generated by oclint
echo "$pwd_files $(ls)" | tr ' ' '\n' | sort | uniq -u | grep .plist | xargs rm

# oclint return code is usually wrong (github.com/oclint/oclint/issues/538)
# Figure out what it is based on stdout and return that instead
no_errors="FilesWithViolations=0"
if grep -q $no_errors <<<"$output"; then
	exit 0
else
	# Following standard of printing to stdout ONLY if there are errors
	echo -e "${output}"
	exit 1
fi
